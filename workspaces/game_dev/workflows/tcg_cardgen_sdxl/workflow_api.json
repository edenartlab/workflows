{
  "12": {
    "inputs": {
      "image": "black_dummy.jpg"
    },
    "class_type": "LoadImage",
    "_meta": {
      "title": "rendered_card_art"
    }
  },
  "13": {
    "inputs": {
      "image": "card_template.png"
    },
    "class_type": "LoadImage",
    "_meta": {
      "title": "background_image_template"
    }
  },
  "14": {
    "inputs": {
      "rounded_rect_radius": 14,
      "anti_aliasing": 2,
      "top": 0,
      "bottom": 0,
      "left": 0,
      "right": 0,
      "detect": "mask_area",
      "obj_ext_top": 0,
      "obj_ext_bottom": 0,
      "obj_ext_left": 0,
      "obj_ext_right": 0,
      "image": [
        "399",
        0
      ]
    },
    "class_type": "LayerUtility: RoundedRectangle",
    "_meta": {
      "title": "rounded_rectangle composite art"
    }
  },
  "24": {
    "inputs": {
      "width": 2000,
      "height": 2000,
      "interpolation": "nearest",
      "method": "keep proportion",
      "condition": "always",
      "multiple_of": 0,
      "image": [
        "259",
        0
      ]
    },
    "class_type": "ImageResize+",
    "_meta": {
      "title": "🔧 Image Resize"
    }
  },
  "36": {
    "inputs": {
      "invert_mask": true,
      "blend_mode": "normal",
      "opacity": 100,
      "x_percent": 50,
      "y_percent": 37.75000000000001,
      "mirror": "None",
      "scale": 0.9900000000000002,
      "aspect_ratio": 1.0000000000000002,
      "rotate": 0,
      "transform_method": "lanczos",
      "anti_aliasing": 0,
      "background_image": [
        "265",
        0
      ],
      "layer_image": [
        "14",
        0
      ]
    },
    "class_type": "LayerUtility: ImageBlendAdvance V2",
    "_meta": {
      "title": "LayerUtility: ImageBlendAdvance V2"
    }
  },
  "51": {
    "inputs": {
      "invert_mask": false,
      "blend_mode": "normal",
      "opacity": 100,
      "x_percent": 87.90000000000002,
      "y_percent": 68.00000000000001,
      "mirror": "None",
      "scale": 1.0000000000000002,
      "aspect_ratio": 1,
      "rotate": 0,
      "transform_method": "lanczos",
      "anti_aliasing": 0,
      "background_image": [
        "144",
        0
      ],
      "layer_image": [
        "267",
        0
      ],
      "layer_mask": [
        "273",
        0
      ]
    },
    "class_type": "LayerUtility: ImageBlendAdvance V2",
    "_meta": {
      "title": "transform RARITY"
    }
  },
  "52": {
    "inputs": {
      "image": "eden-logo-rembg.png"
    },
    "class_type": "LoadImage",
    "_meta": {
      "title": "rarity_icon"
    }
  },
  "72": {
    "inputs": {
      "image": [
        "51",
        0
      ]
    },
    "class_type": "GetImageSizeAndCount",
    "_meta": {
      "title": "Get Image Size & Count"
    }
  },
  "81": {
    "inputs": {
      "text": [
        "331",
        0
      ],
      "image_width": [
        "72",
        1
      ],
      "image_height": [
        "72",
        2
      ],
      "font_name": "mplantin.ttf",
      "font_size": 48,
      "font_color": "custom",
      "font_opacity": 1,
      "background_color": "transparent",
      "background_opacity": 1,
      "vertical_align": "top",
      "horizontal_align": "left",
      "justify": true,
      "x_percent": 0,
      "y_percent": 72.00000000000001,
      "x_offset": 0,
      "y_offset": 0,
      "line_spacing": 12,
      "rotation_angle": 0,
      "rotation_options": "text center",
      "language": "en_US",
      "font_color_hex": [
        "428",
        0
      ],
      "bg_color_hex": "#000000",
      "textbox": [
        "246",
        0
      ],
      "shadow": [
        "224",
        0
      ],
      "img_composite": [
        "72",
        0
      ],
      "margins": [
        "281",
        0
      ]
    },
    "class_type": "DrawText",
    "_meta": {
      "title": "text"
    }
  },
  "84": {
    "inputs": {
      "rounded_rect_radius": 13,
      "anti_aliasing": 2,
      "top": 0,
      "bottom": 0,
      "left": 0,
      "right": 0,
      "detect": "mask_area",
      "obj_ext_top": 0,
      "obj_ext_bottom": -31.200000000000003,
      "obj_ext_left": 1.2000000000000002,
      "obj_ext_right": 8,
      "image": [
        "298",
        0
      ]
    },
    "class_type": "LayerUtility: RoundedRectangle",
    "_meta": {
      "title": "LayerUtility: RoundedRectangle"
    }
  },
  "117": {
    "inputs": {
      "value": false,
      "on_false": "1",
      "on_true": "2"
    },
    "class_type": "BoolPlusPlus",
    "_meta": {
      "title": "use_rendered_art"
    }
  },
  "118": {
    "inputs": {
      "mode": "SWITCH",
      "selection_in": [
        "117",
        2
      ],
      "selection_out": 1,
      "validate_typing": true,
      "input1": [
        "371",
        0
      ],
      "input2": [
        "12",
        0
      ]
    },
    "class_type": "UniversalSwitch",
    "_meta": {
      "title": "switch rendered art"
    }
  },
  "119": {
    "inputs": {
      "text": [
        "334",
        0
      ],
      "image_width": [
        "24",
        1
      ],
      "image_height": [
        "24",
        2
      ],
      "font_name": "MPlantin Bold.ttf",
      "font_size": 56,
      "font_color": "custom",
      "font_opacity": 1,
      "background_color": "transparent",
      "background_opacity": 1,
      "vertical_align": "top",
      "horizontal_align": "left",
      "justify": 0,
      "x_percent": 10.000000000000002,
      "y_percent": 6.500000000000001,
      "x_offset": 0,
      "y_offset": 0,
      "line_spacing": 6,
      "rotation_angle": 0,
      "rotation_options": "text center",
      "language": "en_US",
      "font_color_hex": [
        "428",
        0
      ],
      "bg_color_hex": "#000000",
      "img_composite": [
        "398",
        0
      ],
      "shadow": [
        "224",
        0
      ],
      "margins": [
        "285",
        0
      ],
      "textbox": [
        "284",
        0
      ]
    },
    "class_type": "DrawText",
    "_meta": {
      "title": "name"
    }
  },
  "128": {
    "inputs": {
      "text": [
        "333",
        0
      ],
      "image_width": [
        "131",
        1
      ],
      "image_height": [
        "131",
        2
      ],
      "font_name": "MPlantin Bold.ttf",
      "font_size": 48,
      "font_color": "custom",
      "font_opacity": 1,
      "background_color": "transparent",
      "background_opacity": 1,
      "vertical_align": "top",
      "horizontal_align": "left",
      "justify": 0,
      "x_percent": 15.000000000000004,
      "y_percent": 66.80000000000001,
      "x_offset": 0,
      "y_offset": 0,
      "line_spacing": 6,
      "rotation_angle": 0,
      "rotation_options": "text center",
      "language": "en_US",
      "font_color_hex": [
        "428",
        0
      ],
      "bg_color_hex": "#000000",
      "img_composite": [
        "131",
        0
      ],
      "shadow": [
        "224",
        0
      ],
      "margins": [
        "283",
        0
      ],
      "textbox": [
        "282",
        0
      ]
    },
    "class_type": "DrawText",
    "_meta": {
      "title": "type"
    }
  },
  "131": {
    "inputs": {
      "image": [
        "119",
        0
      ]
    },
    "class_type": "GetImageSizeAndCount",
    "_meta": {
      "title": "Get Image Size & Count"
    }
  },
  "144": {
    "inputs": {
      "text": [
        "336",
        0
      ],
      "image_width": [
        "131",
        1
      ],
      "image_height": [
        "131",
        2
      ],
      "font_name": "MPlantin Bold.ttf",
      "font_size": 72,
      "font_color": "custom",
      "font_opacity": 1,
      "background_color": "black",
      "background_opacity": 1,
      "vertical_align": "top",
      "horizontal_align": "left",
      "justify": false,
      "x_percent": 82.20000000000002,
      "y_percent": 93.40000000000002,
      "x_offset": 0,
      "y_offset": 0,
      "line_spacing": 7,
      "rotation_angle": 0,
      "rotation_options": "text center",
      "language": "en_US",
      "font_color_hex": [
        "428",
        0
      ],
      "bg_color_hex": "#000000",
      "img_composite": [
        "128",
        0
      ],
      "shadow": [
        "224",
        0
      ]
    },
    "class_type": "DrawText",
    "_meta": {
      "title": "stats"
    }
  },
  "156": {
    "inputs": {
      "red": 255,
      "green": 255,
      "blue": 255,
      "threshold": 127,
      "image": [
        "24",
        0
      ]
    },
    "class_type": "MaskFromColor+",
    "_meta": {
      "title": "🔧 Mask From Color"
    }
  },
  "160": {
    "inputs": {
      "mask": [
        "156",
        0
      ]
    },
    "class_type": "InvertMask",
    "_meta": {
      "title": "InvertMask"
    }
  },
  "172": {
    "inputs": {
      "image": [
        "84",
        0
      ]
    },
    "class_type": "GetImageSizeAndCount",
    "_meta": {
      "title": "Get Image Size & Count"
    }
  },
  "174": {
    "inputs": {
      "lora_name": "clipguideddiffusion_lora.safetensors",
      "strength_model": [
        "179",
        0
      ],
      "strength_clip": [
        "179",
        0
      ],
      "model": [
        "184",
        0
      ],
      "clip": [
        "184",
        1
      ]
    },
    "class_type": "LoraLoader",
    "_meta": {
      "title": "Load LoRA"
    }
  },
  "175": {
    "inputs": {
      "width": 1248,
      "height": 2000,
      "batch_size": 1
    },
    "class_type": "EmptyLatentImage",
    "_meta": {
      "title": "Empty Latent Image"
    }
  },
  "177": {
    "inputs": {
      "text": "(text:1.4) signature watermark (words:1.4) sentences letters captions (writing:1.4)",
      "clip": [
        "174",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "negative_prompt"
    }
  },
  "178": {
    "inputs": {
      "samples": [
        "187",
        0
      ],
      "vae": [
        "184",
        2
      ]
    },
    "class_type": "VAEDecode",
    "_meta": {
      "title": "VAE Decode"
    }
  },
  "179": {
    "inputs": {
      "value": 0
    },
    "class_type": "Eden_Float",
    "_meta": {
      "title": "lora_strength"
    }
  },
  "180": {
    "inputs": {
      "strength": 0.5000000000000001,
      "start_percent": 0,
      "end_percent": 1,
      "positive": [
        "381",
        0
      ],
      "negative": [
        "381",
        1
      ],
      "control_net": [
        "182",
        0
      ],
      "image": [
        "181",
        0
      ],
      "vae": [
        "184",
        2
      ]
    },
    "class_type": "ControlNetApplyAdvanced",
    "_meta": {
      "title": "controlnet_strength"
    }
  },
  "181": {
    "inputs": {
      "width": 2000,
      "height": 2000,
      "interpolation": "nearest",
      "method": "keep proportion",
      "condition": "always",
      "multiple_of": 0,
      "image": [
        "13",
        0
      ]
    },
    "class_type": "ImageResize+",
    "_meta": {
      "title": "🔧 Image Resize"
    }
  },
  "182": {
    "inputs": {
      "control_net_name": "controlnet-depth-sdxl-1.0/diffusion_pytorch_model.safetensors"
    },
    "class_type": "ControlNetLoader",
    "_meta": {
      "title": "Load ControlNet Model"
    }
  },
  "184": {
    "inputs": {
      "ckpt_name": "zavychromaxl_v90.safetensors"
    },
    "class_type": "CheckpointLoaderSimple",
    "_meta": {
      "title": "Load Checkpoint"
    }
  },
  "185": {
    "inputs": {
      "preprocessor": [
        "188",
        0
      ],
      "resolution": [
        "342",
        0
      ],
      "image": [
        "181",
        0
      ]
    },
    "class_type": "AIO_Preprocessor",
    "_meta": {
      "title": "controlnet_preprocessor"
    }
  },
  "187": {
    "inputs": {
      "seed": [
        "425",
        0
      ],
      "steps": [
        "447",
        0
      ],
      "cfg": 8,
      "sampler_name": "euler",
      "scheduler": "normal",
      "denoise": 1,
      "model": [
        "174",
        0
      ],
      "positive": [
        "180",
        0
      ],
      "negative": [
        "180",
        1
      ],
      "latent_image": [
        "463",
        0
      ]
    },
    "class_type": "KSampler",
    "_meta": {
      "title": "KSampler_SDXL_background"
    }
  },
  "188": {
    "inputs": {
      "preprocessor": "AnyLineArtPreprocessor_aux"
    },
    "class_type": "ControlNetPreprocessorSelector",
    "_meta": {
      "title": "Preprocessor Selector"
    }
  },
  "193": {
    "inputs": {
      "samples": [
        "205",
        0
      ],
      "vae": [
        "204",
        2
      ]
    },
    "class_type": "VAEDecode",
    "_meta": {
      "title": "VAE Decode"
    }
  },
  "199": {
    "inputs": {
      "pixels": [
        "464",
        0
      ],
      "vae": [
        "204",
        2
      ]
    },
    "class_type": "VAEEncode",
    "_meta": {
      "title": "VAE Encode"
    }
  },
  "201": {
    "inputs": {
      "lora_name": "flux/flux_turbo_v1_1.safetensors",
      "strength_model": 0,
      "model": [
        "409",
        0
      ]
    },
    "class_type": "LoraLoaderModelOnly",
    "_meta": {
      "title": "LoraLoaderModelOnly"
    }
  },
  "202": {
    "inputs": {
      "text": [
        "374",
        0
      ],
      "clip": [
        "204",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Positive Prompt)"
    }
  },
  "204": {
    "inputs": {
      "ckpt_name": "FLUX1/flux1-dev-fp8.safetensors"
    },
    "class_type": "CheckpointLoaderSimple",
    "_meta": {
      "title": "Load Checkpoint"
    }
  },
  "205": {
    "inputs": {
      "seed": [
        "425",
        0
      ],
      "steps": [
        "436",
        0
      ],
      "cfg": 1,
      "sampler_name": "euler",
      "scheduler": "simple",
      "denoise": 0.9300000000000002,
      "model": [
        "201",
        0
      ],
      "positive": [
        "207",
        0
      ],
      "negative": [
        "206",
        0
      ],
      "latent_image": [
        "199",
        0
      ]
    },
    "class_type": "KSampler",
    "_meta": {
      "title": "KSampler_FLUX_background"
    }
  },
  "206": {
    "inputs": {
      "text": [
        "423",
        0
      ],
      "clip": [
        "204",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Negative Prompt)"
    }
  },
  "207": {
    "inputs": {
      "guidance": [
        "448",
        0
      ],
      "conditioning": [
        "202",
        0
      ]
    },
    "class_type": "FluxGuidance",
    "_meta": {
      "title": "FluxGuidance"
    }
  },
  "215": {
    "inputs": {
      "guidance": [
        "448",
        0
      ],
      "conditioning": [
        "347",
        0
      ]
    },
    "class_type": "FluxGuidance",
    "_meta": {
      "title": "FluxGuidance"
    }
  },
  "216": {
    "inputs": {
      "samples": [
        "223",
        0
      ],
      "vae": [
        "204",
        2
      ]
    },
    "class_type": "VAEDecode",
    "_meta": {
      "title": "VAE Decode"
    }
  },
  "219": {
    "inputs": {
      "text": "(text:1.4) signature watermark (words:1.4) sentences letters captions (writing:1.4)",
      "clip": [
        "204",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Negative Prompt)"
    }
  },
  "223": {
    "inputs": {
      "seed": [
        "425",
        0
      ],
      "steps": [
        "436",
        0
      ],
      "cfg": 1,
      "sampler_name": "euler",
      "scheduler": "simple",
      "denoise": 1,
      "model": [
        "201",
        0
      ],
      "positive": [
        "215",
        0
      ],
      "negative": [
        "219",
        0
      ],
      "latent_image": [
        "226",
        0
      ]
    },
    "class_type": "KSampler",
    "_meta": {
      "title": "KSampler_FLUX_art"
    }
  },
  "224": {
    "inputs": {
      "color": "custom",
      "opacity": [
        "296",
        0
      ],
      "distance": 4,
      "angle": 45,
      "blur": 2,
      "color_hex": [
        "426",
        0
      ]
    },
    "class_type": "TextShadow",
    "_meta": {
      "title": "Text Shadow"
    }
  },
  "226": {
    "inputs": {
      "width": 1024,
      "height": 1024,
      "batch_size": 1
    },
    "class_type": "EmptySD3LatentImage",
    "_meta": {
      "title": "EmptySD3LatentImage"
    }
  },
  "245": {
    "inputs": {
      "width": 1024,
      "height": 1024,
      "interpolation": "nearest",
      "method": "keep proportion",
      "condition": "always",
      "multiple_of": 0,
      "image": [
        "118",
        0
      ]
    },
    "class_type": "ImageResize+",
    "_meta": {
      "title": "🔧 Image Resize"
    }
  },
  "246": {
    "inputs": {
      "color": "darkgray",
      "opacity": 0,
      "border_color": "darkgray",
      "border_opacity": 0,
      "border_width": 6,
      "corner_radius": 36,
      "padding_left": 64,
      "padding_right": 0,
      "padding_top": 36,
      "padding_bottom": 30,
      "full_width": true,
      "color_hex": "#FFFFFF",
      "border_hex": "#000000"
    },
    "class_type": "TextBoxStyle",
    "_meta": {
      "title": "Text Box Style"
    }
  },
  "258": {
    "inputs": {
      "image": "card_template.png"
    },
    "class_type": "LoadImage",
    "_meta": {
      "title": "rendered_card_background"
    }
  },
  "259": {
    "inputs": {
      "mode": "SWITCH",
      "selection_in": [
        "287",
        2
      ],
      "selection_out": 1,
      "validate_typing": true,
      "input1": [
        "275",
        0
      ],
      "input2": [
        "258",
        0
      ]
    },
    "class_type": "UniversalSwitch",
    "_meta": {
      "title": "💠 Universal Switch"
    }
  },
  "260": {
    "inputs": {
      "value": false,
      "on_false": "1",
      "on_true": "2"
    },
    "class_type": "BoolPlusPlus",
    "_meta": {
      "title": "use_flux_background"
    }
  },
  "263": {
    "inputs": {
      "image": "matte-over.png"
    },
    "class_type": "LoadImage",
    "_meta": {
      "title": "dark_matte"
    }
  },
  "265": {
    "inputs": {
      "invert_mask": true,
      "blend_mode": "normal",
      "opacity": 0,
      "x_percent": 50.00000000000001,
      "y_percent": 50.00000000000001,
      "mirror": "None",
      "scale": 1,
      "aspect_ratio": 1,
      "rotate": 0,
      "transform_method": "lanczos",
      "anti_aliasing": 0,
      "background_image": [
        "393",
        0
      ],
      "layer_image": [
        "263",
        0
      ],
      "layer_mask": [
        "263",
        1
      ]
    },
    "class_type": "LayerUtility: ImageBlendAdvance V2",
    "_meta": {
      "title": "LayerUtility: ImageBlendAdvance V2"
    }
  },
  "267": {
    "inputs": {
      "width": 84,
      "height": 84,
      "interpolation": "nearest",
      "method": "fill / crop",
      "condition": "always",
      "multiple_of": 0,
      "image": [
        "52",
        0
      ]
    },
    "class_type": "ImageResize+",
    "_meta": {
      "title": "🔧 Image Resize"
    }
  },
  "271": {
    "inputs": {
      "value": false,
      "on_false": "1",
      "on_true": "2"
    },
    "class_type": "BoolPlusPlus",
    "_meta": {
      "title": "use_flux_art"
    }
  },
  "273": {
    "inputs": {
      "channel": "red",
      "image": [
        "267",
        0
      ]
    },
    "class_type": "ImageToMask",
    "_meta": {
      "title": "Convert Image to Mask"
    }
  },
  "275": {
    "inputs": {
      "mode": "SWITCH",
      "selection_in": [
        "260",
        2
      ],
      "selection_out": 1,
      "validate_typing": false,
      "input1": [
        "178",
        0
      ],
      "input2": [
        "193",
        0
      ]
    },
    "class_type": "UniversalSwitch",
    "_meta": {
      "title": "💠 Universal Switch"
    }
  },
  "279": {
    "inputs": {
      "width": 768,
      "height": 1216,
      "interpolation": "nearest",
      "method": "keep proportion",
      "condition": "always",
      "multiple_of": 0,
      "image": [
        "13",
        0
      ]
    },
    "class_type": "ImageResize+",
    "_meta": {
      "title": "🔧 Image Resize"
    }
  },
  "281": {
    "inputs": {
      "left": 118,
      "right": 118,
      "top": 0,
      "bottom": 0
    },
    "class_type": "TextMargins",
    "_meta": {
      "title": "Text Margins"
    }
  },
  "282": {
    "inputs": {
      "color": "black",
      "opacity": 0,
      "border_color": "black",
      "border_opacity": 0,
      "border_width": 6,
      "corner_radius": 36,
      "padding_left": 38,
      "padding_right": 64,
      "padding_top": 42,
      "padding_bottom": 30,
      "full_width": true,
      "color_hex": "#FFFFFF",
      "border_hex": "#000000"
    },
    "class_type": "TextBoxStyle",
    "_meta": {
      "title": "Text Box Style"
    }
  },
  "283": {
    "inputs": {
      "left": -56,
      "right": 132,
      "top": 0,
      "bottom": 0
    },
    "class_type": "TextMargins",
    "_meta": {
      "title": "Text Margins"
    }
  },
  "284": {
    "inputs": {
      "color": "black",
      "opacity": 0,
      "border_color": "black",
      "border_opacity": 0,
      "border_width": 6,
      "corner_radius": 36,
      "padding_left": 52,
      "padding_right": 64,
      "padding_top": 40,
      "padding_bottom": 36,
      "full_width": true,
      "color_hex": "#FFFFFF",
      "border_hex": "#000000"
    },
    "class_type": "TextBoxStyle",
    "_meta": {
      "title": "Text Box Style"
    }
  },
  "285": {
    "inputs": {
      "left": 0,
      "right": 104,
      "top": 0,
      "bottom": 0
    },
    "class_type": "TextMargins",
    "_meta": {
      "title": "Text Margins"
    }
  },
  "287": {
    "inputs": {
      "value": false,
      "on_false": "1",
      "on_true": "2"
    },
    "class_type": "BoolPlusPlus",
    "_meta": {
      "title": "use_rendered_background"
    }
  },
  "289": {
    "inputs": {
      "left": 0,
      "right": 112,
      "top": 0,
      "bottom": 0
    },
    "class_type": "TextMargins",
    "_meta": {
      "title": "Text Margins"
    }
  },
  "291": {
    "inputs": {
      "color": "black",
      "opacity": 0,
      "border_color": "black",
      "border_opacity": 0,
      "border_width": 6,
      "corner_radius": 36,
      "padding_left": 52,
      "padding_right": 200,
      "padding_top": 40,
      "padding_bottom": 535,
      "full_width": false,
      "color_hex": "#FFFFFF",
      "border_hex": "#000000"
    },
    "class_type": "TextBoxStyle",
    "_meta": {
      "title": "Text Box Style"
    }
  },
  "296": {
    "inputs": {
      "value": 1.0000000000000002
    },
    "class_type": "Eden_Float",
    "_meta": {
      "title": "shadow opacity"
    }
  },
  "298": {
    "inputs": {
      "text": [
        "391",
        0
      ],
      "image_width": [
        "72",
        1
      ],
      "image_height": [
        "72",
        2
      ],
      "font_name": "MPlantin Italic.ttf",
      "font_size": 42,
      "font_color": "custom",
      "font_opacity": 1,
      "background_color": "transparent",
      "background_opacity": 1,
      "vertical_align": "top",
      "horizontal_align": "left",
      "justify": true,
      "x_percent": 0,
      "y_percent": 91.70000000000002,
      "x_offset": 0,
      "y_offset": 0,
      "line_spacing": 12,
      "rotation_angle": 0,
      "rotation_options": "text center",
      "language": "en_US",
      "font_color_hex": [
        "428",
        0
      ],
      "bg_color_hex": "#000000",
      "textbox": [
        "301",
        0
      ],
      "shadow": [
        "224",
        0
      ],
      "img_composite": [
        "81",
        0
      ],
      "margins": [
        "299",
        0
      ]
    },
    "class_type": "DrawText",
    "_meta": {
      "title": "flavor"
    }
  },
  "299": {
    "inputs": {
      "left": 112,
      "right": 296,
      "top": 0,
      "bottom": 0
    },
    "class_type": "TextMargins",
    "_meta": {
      "title": "Text Margins"
    }
  },
  "301": {
    "inputs": {
      "color": "darkgray",
      "opacity": 0,
      "border_color": "darkgray",
      "border_opacity": 0,
      "border_width": 6,
      "corner_radius": 36,
      "padding_left": 64,
      "padding_right": 192,
      "padding_top": 36,
      "padding_bottom": 30,
      "full_width": true,
      "color_hex": "#FFFFFF",
      "border_hex": "#000000"
    },
    "class_type": "TextBoxStyle",
    "_meta": {
      "title": "Text Box Style"
    }
  },
  "303": {
    "inputs": {
      "text": "{'name': 'Pseudo Scientist', 'type': 'Creature — Human Shaman', 'cost': '{3}{U}{R}', 'text': 'When Pseudo Scientist enters the battlefield, draw a card for each card in your hand, then discard a card for each card drawn this way.', 'flavor': 'Dancing naked in the desert, he finds the truth in chaos and DMT.', 'rarity': 'Rare', 'stats': '3/3', 'prompt_art': 'naked sadhu Math professor dancing, DMT induced trance, Mahashivratri celebration, giant flaming dodecahedron, high detail, vibrant colors, surreal, dynamic composition, ethereal glow, painterly style, high contrast', 'prompt_cardframe': 'fantasy trading card game very thin card border at the outer edge filled with a textured and detailed abstract card background art. stylized abstract card background art is with thematic elements of fire lava flamy magma blood rage mountain, gradient of red and blue, high contrast area on the bottom for white text to show up clearly against'}",
      "output_type": "ANY",
      "passthrough": [
        "325",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "304": {
    "inputs": {
      "value": ""
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "cost"
    }
  },
  "305": {
    "inputs": {
      "value": ""
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "text"
    }
  },
  "306": {
    "inputs": {
      "value": ""
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "flavor"
    }
  },
  "307": {
    "inputs": {
      "value": ""
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "rarity"
    }
  },
  "308": {
    "inputs": {
      "value": ""
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "stats"
    }
  },
  "309": {
    "inputs": {
      "value": ""
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "prompt_art"
    }
  },
  "310": {
    "inputs": {
      "value": ""
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "prompt_cardframe"
    }
  },
  "311": {
    "inputs": {
      "text": "Pseudo Scientist Creature — Human Shaman {3}{U}{R} When Pseudo Scientist enters the battlefield, draw a card for each card in your hand, then discard a card for each card drawn this way. Dancing naked in the desert, he finds the truth in chaos and DMT. ",
      "output_type": "ANY",
      "passthrough": [
        "339",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "312": {
    "inputs": {
      "value": ""
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "type"
    }
  },
  "313": {
    "inputs": {
      "value": ""
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "name"
    }
  },
  "314": {
    "inputs": {
      "key": "prompt_cardframe",
      "py_dict": [
        "315",
        0
      ],
      "value": [
        "310",
        0
      ]
    },
    "class_type": "DictSetNode",
    "_meta": {
      "title": "Pyobjects/Dict Set"
    }
  },
  "315": {
    "inputs": {
      "key": "prompt_art",
      "py_dict": [
        "316",
        0
      ],
      "value": [
        "309",
        0
      ]
    },
    "class_type": "DictSetNode",
    "_meta": {
      "title": "Pyobjects/Dict Set"
    }
  },
  "316": {
    "inputs": {
      "key": "stats",
      "py_dict": [
        "317",
        0
      ],
      "value": [
        "308",
        0
      ]
    },
    "class_type": "DictSetNode",
    "_meta": {
      "title": "Pyobjects/Dict Set"
    }
  },
  "317": {
    "inputs": {
      "key": "rarity",
      "py_dict": [
        "318",
        0
      ],
      "value": [
        "307",
        0
      ]
    },
    "class_type": "DictSetNode",
    "_meta": {
      "title": "Pyobjects/Dict Set"
    }
  },
  "318": {
    "inputs": {
      "key": "flavor",
      "py_dict": [
        "319",
        0
      ],
      "value": [
        "306",
        0
      ]
    },
    "class_type": "DictSetNode",
    "_meta": {
      "title": "Pyobjects/Dict Set"
    }
  },
  "319": {
    "inputs": {
      "key": "text",
      "py_dict": [
        "320",
        0
      ],
      "value": [
        "305",
        0
      ]
    },
    "class_type": "DictSetNode",
    "_meta": {
      "title": "Pyobjects/Dict Set"
    }
  },
  "320": {
    "inputs": {
      "key": "cost",
      "py_dict": [
        "321",
        0
      ],
      "value": [
        "304",
        0
      ]
    },
    "class_type": "DictSetNode",
    "_meta": {
      "title": "Pyobjects/Dict Set"
    }
  },
  "321": {
    "inputs": {
      "key": "type",
      "py_dict": [
        "329",
        0
      ],
      "value": [
        "312",
        0
      ]
    },
    "class_type": "DictSetNode",
    "_meta": {
      "title": "Pyobjects/Dict Set"
    }
  },
  "322": {
    "inputs": {},
    "class_type": "DictCreateNode",
    "_meta": {
      "title": "Pyobjects/Create Dict"
    }
  },
  "324": {
    "inputs": {
      "text": "{'name': '', 'type': '', 'cost': '', 'text': '', 'flavor': '', 'rarity': '', 'stats': '', 'prompt_art': '', 'prompt_cardframe': ''}",
      "output_type": "ANY",
      "passthrough": [
        "314",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "325": {
    "inputs": {
      "input_string": [
        "385",
        0
      ]
    },
    "class_type": "StringToDict",
    "_meta": {
      "title": "Smart Dictionary from String 📝"
    }
  },
  "327": {
    "inputs": {
      "text": "Rare 3/3 naked sadhu Math professor dancing, DMT induced trance, Mahashivratri celebration, giant flaming dodecahedron, high detail, vibrant colors, surreal, dynamic composition, ethereal glow, painterly style, high contrast fantasy trading card game very thin card border at the outer edge filled with a textured and detailed abstract card background art. stylized abstract card background art is with thematic elements of fire lava flamy magma blood rage mountain, gradient of red and blue, high contrast area on the bottom for white text to show up clearly against {'name': 'Pseudo Scientist', 'type': 'Creature — Human Shaman', 'cost': '{3}{U}{R}', 'text': 'When Pseudo Scientist enters the battlefield, draw a card for each card in your hand, then discard a card for each card drawn this way.', 'flavor': 'Dancing naked in the desert, he finds the truth in chaos and DMT.', 'rarity': 'Rare', 'stats': '3/3', 'prompt_art': 'naked sadhu Math professor dancing, DMT induced trance, Mahashivratri celebration, giant flaming dodecahedron, high detail, vibrant colors, surreal, dynamic composition, ethereal glow, painterly style, high contrast', 'prompt_cardframe': 'fantasy trading card game very thin card border at the outer edge filled with a textured and detailed abstract card background art. stylized abstract card background art is with thematic elements of fire lava flamy magma blood rage mountain, gradient of red and blue, high contrast area on the bottom for white text to show up clearly against'} ",
      "output_type": "ANY",
      "passthrough": [
        "328",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "328": {
    "inputs": {
      "text": "%aux% %aux2% %aux3% %aux4% %aux5% ",
      "output_type": "ANY",
      "aux": [
        "335",
        0
      ],
      "aux2": [
        "336",
        0
      ],
      "aux3": [
        "337",
        0
      ],
      "aux4": [
        "338",
        0
      ],
      "aux5": [
        "325",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "329": {
    "inputs": {
      "key": "name",
      "py_dict": [
        "322",
        0
      ],
      "value": [
        "313",
        0
      ]
    },
    "class_type": "DictSetNode",
    "_meta": {
      "title": "Pyobjects/Dict Set"
    }
  },
  "330": {
    "inputs": {
      "key": "flavor",
      "py_dict": [
        "325",
        0
      ]
    },
    "class_type": "DictGetNode",
    "_meta": {
      "title": "Pyobjects/Dict Get"
    }
  },
  "331": {
    "inputs": {
      "key": "text",
      "py_dict": [
        "325",
        0
      ]
    },
    "class_type": "DictGetNode",
    "_meta": {
      "title": "Pyobjects/Dict Get"
    }
  },
  "332": {
    "inputs": {
      "key": "cost",
      "py_dict": [
        "325",
        0
      ]
    },
    "class_type": "DictGetNode",
    "_meta": {
      "title": "Pyobjects/Dict Get"
    }
  },
  "333": {
    "inputs": {
      "key": "type",
      "py_dict": [
        "325",
        0
      ]
    },
    "class_type": "DictGetNode",
    "_meta": {
      "title": "Pyobjects/Dict Get"
    }
  },
  "334": {
    "inputs": {
      "key": "name",
      "py_dict": [
        "325",
        0
      ]
    },
    "class_type": "DictGetNode",
    "_meta": {
      "title": "Pyobjects/Dict Get"
    }
  },
  "335": {
    "inputs": {
      "key": "rarity",
      "py_dict": [
        "325",
        0
      ]
    },
    "class_type": "DictGetNode",
    "_meta": {
      "title": "Pyobjects/Dict Get"
    }
  },
  "336": {
    "inputs": {
      "key": "stats",
      "py_dict": [
        "325",
        0
      ]
    },
    "class_type": "DictGetNode",
    "_meta": {
      "title": "Pyobjects/Dict Get"
    }
  },
  "337": {
    "inputs": {
      "key": "prompt_art",
      "py_dict": [
        "325",
        0
      ]
    },
    "class_type": "DictGetNode",
    "_meta": {
      "title": "Pyobjects/Dict Get"
    }
  },
  "338": {
    "inputs": {
      "key": "prompt_cardframe",
      "py_dict": [
        "325",
        0
      ]
    },
    "class_type": "DictGetNode",
    "_meta": {
      "title": "Pyobjects/Dict Get"
    }
  },
  "339": {
    "inputs": {
      "text": "%aux% %aux2% %aux3% %aux4% %aux5% ",
      "output_type": "ANY",
      "aux": [
        "334",
        0
      ],
      "aux2": [
        "333",
        0
      ],
      "aux3": [
        "332",
        0
      ],
      "aux4": [
        "331",
        0
      ],
      "aux5": [
        "330",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "340": {
    "inputs": {
      "basic_prompt": [
        "324",
        0
      ],
      "enhancement_instructions": [
        "452",
        0
      ],
      "max_token": 500,
      "model": "gpt-4o",
      "seed": 210,
      "temperature": 0.7
    },
    "class_type": "Eden_GPTPromptEnhancer",
    "_meta": {
      "title": "Eden_GPTPromptEnhancer"
    }
  },
  "342": {
    "inputs": {
      "mode": false,
      "a": [
        "343",
        2
      ],
      "b": [
        "343",
        1
      ]
    },
    "class_type": "DRMBT_MultiMinMax",
    "_meta": {
      "title": "Multi Min/Max"
    }
  },
  "343": {
    "inputs": {
      "image": [
        "464",
        0
      ]
    },
    "class_type": "GetImageSizeAndCount",
    "_meta": {
      "title": "Get Image Size & Count"
    }
  },
  "347": {
    "inputs": {
      "text": [
        "431",
        0
      ],
      "clip": [
        "204",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Prompt)"
    }
  },
  "348": {
    "inputs": {
      "text": [
        "338",
        0
      ],
      "clip": [
        "174",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Prompt)"
    }
  },
  "351": {
    "inputs": {
      "text": "naked sadhu Math professor dancing, DMT induced trance, Mahashivratri celebration, giant flaming dodecahedron, high detail, vibrant colors, surreal, dynamic composition, ethereal glow, painterly style, high contrast",
      "output_type": "ANY",
      "passthrough": [
        "431",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "363": {
    "inputs": {
      "width": 1024,
      "height": 1024,
      "batch_size": 1
    },
    "class_type": "EmptyLatentImage",
    "_meta": {
      "title": "Empty Latent Image"
    }
  },
  "364": {
    "inputs": {
      "samples": [
        "368",
        0
      ],
      "vae": [
        "184",
        2
      ]
    },
    "class_type": "VAEDecode",
    "_meta": {
      "title": "VAE Decode"
    }
  },
  "365": {
    "inputs": {
      "strength": 0,
      "start_percent": 0,
      "end_percent": 1,
      "positive": [
        "372",
        0
      ],
      "negative": [
        "367",
        0
      ],
      "control_net": [
        "369",
        0
      ],
      "image": [
        "181",
        0
      ],
      "vae": [
        "184",
        2
      ]
    },
    "class_type": "ControlNetApplyAdvanced",
    "_meta": {
      "title": "controlnet_strength"
    }
  },
  "367": {
    "inputs": {
      "text": [
        "423",
        0
      ],
      "clip": [
        "174",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "negative_prompt"
    }
  },
  "368": {
    "inputs": {
      "seed": [
        "425",
        0
      ],
      "steps": [
        "447",
        0
      ],
      "cfg": 8,
      "sampler_name": "euler",
      "scheduler": "normal",
      "denoise": 1,
      "model": [
        "174",
        0
      ],
      "positive": [
        "365",
        0
      ],
      "negative": [
        "365",
        1
      ],
      "latent_image": [
        "363",
        0
      ]
    },
    "class_type": "KSampler",
    "_meta": {
      "title": "KSampler_SDXL_art"
    }
  },
  "369": {
    "inputs": {
      "control_net_name": "controlnet-depth-sdxl-1.0/diffusion_pytorch_model.safetensors"
    },
    "class_type": "ControlNetLoader",
    "_meta": {
      "title": "Load ControlNet Model"
    }
  },
  "370": {
    "inputs": {
      "value": false,
      "on_false": "1",
      "on_true": "2"
    },
    "class_type": "BoolPlusPlus",
    "_meta": {
      "title": "use_flux_border"
    }
  },
  "371": {
    "inputs": {
      "mode": "SWITCH",
      "selection_in": [
        "271",
        2
      ],
      "selection_out": 1,
      "validate_typing": true,
      "input1": [
        "364",
        0
      ],
      "input2": [
        "216",
        0
      ]
    },
    "class_type": "UniversalSwitch",
    "_meta": {
      "title": "switch rendered art"
    }
  },
  "372": {
    "inputs": {
      "text": [
        "431",
        0
      ],
      "clip": [
        "174",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Prompt)"
    }
  },
  "374": {
    "inputs": {
      "text": "fantasy trading card game very thin card border at the outer edge filled with a textured and detailed abstract card background art. stylized abstract card background art is with thematic elements of fire lava flamy magma blood rage mountain, gradient of red and blue, high contrast area on the bottom for white text to show up clearly against",
      "output_type": "ANY",
      "passthrough": [
        "338",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "375": {
    "inputs": {
      "image": [
        "181",
        0
      ]
    },
    "class_type": "GetImageSize+",
    "_meta": {
      "title": "🔧 Get Image Size"
    }
  },
  "376": {
    "inputs": {
      "images": [
        "464",
        0
      ]
    },
    "class_type": "PreviewImage",
    "_meta": {
      "title": "Preview Image"
    }
  },
  "377": {
    "inputs": {
      "text": [
        "414",
        0
      ],
      "image_width": [
        "375",
        0
      ],
      "image_height": [
        "375",
        1
      ],
      "font_name": "mana.ttf",
      "font_size": 52,
      "font_color": "white",
      "font_opacity": 1,
      "background_color": "black",
      "background_opacity": 1,
      "vertical_align": "top",
      "horizontal_align": "right",
      "justify": false,
      "x_percent": 0,
      "y_percent": 6.300000000000002,
      "x_offset": 0,
      "y_offset": 0,
      "line_spacing": 6,
      "rotation_angle": 0,
      "rotation_options": "text center",
      "language": "en_US",
      "font_color_hex": "#000000",
      "bg_color_hex": "#000000",
      "margins": [
        "289",
        0
      ],
      "textbox": [
        "291",
        0
      ]
    },
    "class_type": "DrawMana",
    "_meta": {
      "title": "Draw Mana Symbols 🎴"
    }
  },
  "381": {
    "inputs": {
      "strength": 1.0000000000000002,
      "start_percent": 0,
      "end_percent": 1,
      "positive": [
        "348",
        0
      ],
      "negative": [
        "177",
        0
      ],
      "control_net": [
        "382",
        0
      ],
      "image": [
        "377",
        0
      ]
    },
    "class_type": "ControlNetApplyAdvanced",
    "_meta": {
      "title": "controlnet_strength"
    }
  },
  "382": {
    "inputs": {
      "control_net_name": "controlnet-scribble-sdxl-1.0/diffusion_pytorch_model.safetensors"
    },
    "class_type": "ControlNetLoader",
    "_meta": {
      "title": "Load ControlNet Model"
    }
  },
  "383": {
    "inputs": {
      "preprocessor": "CannyEdgePreprocessor",
      "resolution": [
        "342",
        0
      ],
      "image": [
        "377",
        0
      ]
    },
    "class_type": "AIO_Preprocessor",
    "_meta": {
      "title": "AIO Aux Preprocessor"
    }
  },
  "384": {
    "inputs": {
      "images": [
        "383",
        0
      ]
    },
    "class_type": "PreviewImage",
    "_meta": {
      "title": "Preview Image"
    }
  },
  "385": {
    "inputs": {
      "text": "{'name': 'Pseudo Scientist', 'type': 'Creature — Human Shaman', 'cost': '{3}{U}{R}', 'text': 'When Pseudo Scientist enters the battlefield, draw a card for each card in your hand, then discard a card for each card drawn this way.', 'flavor': 'Dancing naked in the desert, he finds the truth in chaos and DMT.', 'rarity': 'Rare', 'stats': '3/3', 'prompt_art': 'naked sadhu Math professor dancing, DMT induced trance, Mahashivratri celebration, giant flaming dodecahedron, high detail, vibrant colors, surreal, dynamic composition, ethereal glow, painterly style, high contrast', 'prompt_cardframe': 'fantasy trading card game very thin card border at the outer edge filled with a textured and detailed abstract card background art. stylized abstract card background art is with thematic elements of fire lava flamy magma blood rage mountain, gradient of red and blue, high contrast area on the bottom for white text to show up clearly against'}",
      "output_type": "ANY",
      "passthrough": [
        "418",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "391": {
    "inputs": {
      "text": "Dancing naked in the desert, he finds the truth in chaos and DMT.",
      "output_type": "ANY",
      "passthrough": [
        "330",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "393": {
    "inputs": {
      "image": [
        "24",
        0
      ]
    },
    "class_type": "GetImageSizeAndCount",
    "_meta": {
      "title": "Get Image Size & Count"
    }
  },
  "396": {
    "inputs": {
      "text": "Rare",
      "output_type": "ANY",
      "passthrough": [
        "335",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "397": {
    "inputs": {
      "rgthree_comparer": {
        "images": [
          {
            "name": "A",
            "selected": true,
            "url": "/api/view?filename=rgthree.compare._temp_oproo_00021_.png&type=temp&subfolder=&rand=0.5299694915388011"
          },
          {
            "name": "B",
            "selected": true,
            "url": "/api/view?filename=rgthree.compare._temp_oproo_00022_.png&type=temp&subfolder=&rand=0.2319730816072647"
          }
        ]
      },
      "image_a": [
        "172",
        0
      ],
      "image_b": [
        "13",
        0
      ]
    },
    "class_type": "Image Comparer (rgthree)",
    "_meta": {
      "title": "Image Comparer (rgthree)"
    }
  },
  "398": {
    "inputs": {
      "image": [
        "36",
        0
      ]
    },
    "class_type": "GetImageSizeAndCount",
    "_meta": {
      "title": "Get Image Size & Count"
    }
  },
  "399": {
    "inputs": {
      "image": [
        "245",
        0
      ]
    },
    "class_type": "GetImageSizeAndCount",
    "_meta": {
      "title": "Get Image Size & Count"
    }
  },
  "401": {
    "inputs": {
      "output_path": "tcg_cardgen",
      "filename_prefix": [
        "402",
        0
      ],
      "filename_delimiter": "_",
      "filename_number_padding": 4,
      "filename_number_start": "false",
      "extension": "png",
      "dpi": 300,
      "quality": 100,
      "optimize_image": "true",
      "lossless_webp": "false",
      "overwrite_mode": "false",
      "show_history": "false",
      "show_history_by_prefix": "true",
      "embed_workflow": "true",
      "show_previews": "true",
      "images": [
        "172",
        0
      ]
    },
    "class_type": "Image Save",
    "_meta": {
      "title": "save card"
    }
  },
  "402": {
    "inputs": {
      "text": "[time(%Y-%m-%d)]_tcg_cardgen_card_%aux%",
      "output_type": "ANY",
      "aux": [
        "334",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "404": {
    "inputs": {
      "text": "tcg_cardgen_background_%aux%",
      "output_type": "ANY",
      "aux": [
        "334",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "405": {
    "inputs": {
      "output_path": "tcg_cardgen",
      "filename_prefix": [
        "404",
        0
      ],
      "filename_delimiter": "_",
      "filename_number_padding": 4,
      "filename_number_start": "false",
      "extension": "png",
      "dpi": 300,
      "quality": 100,
      "optimize_image": "true",
      "lossless_webp": "false",
      "overwrite_mode": "false",
      "show_history": "false",
      "show_history_by_prefix": "true",
      "embed_workflow": "true",
      "show_previews": "true",
      "images": [
        "259",
        0
      ]
    },
    "class_type": "Image Save",
    "_meta": {
      "title": "save card background"
    }
  },
  "406": {
    "inputs": {
      "output_path": "tcg_cardgen",
      "filename_prefix": [
        "408",
        0
      ],
      "filename_delimiter": "_",
      "filename_number_padding": 4,
      "filename_number_start": "false",
      "extension": "png",
      "dpi": 300,
      "quality": 100,
      "optimize_image": "true",
      "lossless_webp": "false",
      "overwrite_mode": "false",
      "show_history": "false",
      "show_history_by_prefix": "true",
      "embed_workflow": "true",
      "show_previews": "true",
      "images": [
        "245",
        0
      ]
    },
    "class_type": "Image Save",
    "_meta": {
      "title": "save card art"
    }
  },
  "408": {
    "inputs": {
      "text": "tcg_cardgen_art_%aux%",
      "output_type": "ANY",
      "aux": [
        "334",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "409": {
    "inputs": {
      "lora_name": "flux/flux_turbo_v1_1.safetensors",
      "strength_model": [
        "435",
        0
      ],
      "model": [
        "204",
        0
      ]
    },
    "class_type": "LoraLoaderModelOnly",
    "_meta": {
      "title": "LoraLoaderModelOnly"
    }
  },
  "414": {
    "inputs": {
      "text": "{3}{U}{R}",
      "output_type": "ANY",
      "passthrough": [
        "332",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "417": {
    "inputs": {
      "input_string": [
        "340",
        0
      ],
      "target_text": "```",
      "replace_with": ""
    },
    "class_type": "Eden_StringReplace",
    "_meta": {
      "title": "Eden_StringReplace"
    }
  },
  "418": {
    "inputs": {
      "input_string": [
        "417",
        0
      ],
      "target_text": "json",
      "replace_with": ""
    },
    "class_type": "Eden_StringReplace",
    "_meta": {
      "title": "Eden_StringReplace"
    }
  },
  "423": {
    "inputs": {
      "value": "(text:1.4) signature watermark (words:1.4) sentences letters captions (writing:1.4)"
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "Eden_String"
    }
  },
  "425": {
    "inputs": {
      "seed": 1098934802840051
    },
    "class_type": "Eden_Seed",
    "_meta": {
      "title": "Eden_Seed"
    }
  },
  "426": {
    "inputs": {
      "value": "#000000"
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "Eden_String"
    }
  },
  "427": {
    "inputs": {
      "value": "#FFFFFF"
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "Eden_String"
    }
  },
  "428": {
    "inputs": {
      "value": "#FFFFFF#E6E6E6"
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "Eden_String"
    }
  },
  "431": {
    "inputs": {
      "text": "%aux%",
      "output_type": "ANY",
      "aux": [
        "337",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "433": {
    "inputs": {
      "value": [
        "441",
        1
      ]
    },
    "class_type": "Eden_Int",
    "_meta": {
      "title": "n_steps"
    }
  },
  "434": {
    "inputs": {
      "value": 12
    },
    "class_type": "Eden_Int",
    "_meta": {
      "title": "steps_flux"
    }
  },
  "435": {
    "inputs": {
      "text": "[%aux4%, %aux2%][%aux3%]",
      "output_type": "FORMULA",
      "aux": [
        "433",
        0
      ],
      "aux2": [
        "439",
        0
      ],
      "aux3": [
        "438",
        0
      ],
      "aux4": [
        "440",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "strength_fast_logic"
    }
  },
  "436": {
    "inputs": {
      "text": "[%aux2%, %aux3%][%aux%]",
      "output_type": "FORMULA",
      "aux": [
        "438",
        0
      ],
      "aux2": [
        "433",
        0
      ],
      "aux3": [
        "434",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "steps_fast_logic"
    }
  },
  "437": {
    "inputs": {
      "value": 0.25
    },
    "class_type": "Eden_Float",
    "_meta": {
      "title": "Speed - Quality TradeOff"
    }
  },
  "438": {
    "inputs": {
      "value": true
    },
    "class_type": "Eden_Bool",
    "_meta": {
      "title": "use_manual_quality"
    }
  },
  "439": {
    "inputs": {
      "value": 0
    },
    "class_type": "Eden_Float",
    "_meta": {
      "title": "strength_fast"
    }
  },
  "440": {
    "inputs": {
      "expression": "(1-a)**1.5",
      "a": [
        "437",
        0
      ]
    },
    "class_type": "Eden_Math",
    "_meta": {
      "title": "fast_strength_math"
    }
  },
  "441": {
    "inputs": {
      "expression": "a*25+(1-a)*8",
      "a": [
        "437",
        0
      ]
    },
    "class_type": "Eden_Math",
    "_meta": {
      "title": "fast_steps_math"
    }
  },
  "445": {
    "inputs": {
      "value": "fantasy card art.\n\ndon't return anything except for the dict, no shebangs or flags like ```json at the top"
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "system_post-prompt"
    }
  },
  "446": {
    "inputs": {
      "value": "You will receive a dictionary of attributes pertaining to a fictional and adult comedy card game with same rules, stats, tropes and mechanics that are analagous to Magic The Gathering, at least in function and flavor, but can have a flavor of dark humor. these cards should be valid and legally playable, occasionally overpowered, and sometimes comically disappointing in terms of what they actually do, like a grizzly bear stats wise on an insane body. creature types and abilities should be mtg abilities, or analogs of with same explainer. don't go too HAM on card text or we'll run out of space to print it \n\n      Your response should be in the same format as the input dictionary. Empty values associated with named keys should be filled out by you. Take the existence of an input as either a single shot example of what this should be, or literally use what is there. if it sounds more like a system prompt instruction for you, follow that instruction.\n\n      keep things punchy. these things should fit in the same text allotments a real magic card should have, so names, card type text and flavor text need to be written economically. \n\n      The prompt for the cardframe and card art should be more verbose, and formatted for SDXL CLIP family text encoder. this should not be longer form natural language, but rather explicit and ferbose comma separated statements.\n\n      for the card frames, take any instruction such as prompt suggestion such as color or even abstract concept like \"love\" or \"orange construction palette racks\" into account, along with the card type, name rarity cost etc. common cards can be more understated, and rare or mythic rare cards should be more elaborate and eye catching\n\n      cost should follow traditional MTG cost symbols and be appropriate to the cards power level, card type tropes, and color themes. always wrap each individual mana symbol in {} brackets, with the following available mappings available to you:\n\n      'W' # White\n      'U' # Blue\n      'B' # Black\n      'R' # Red\n      'G' # Green\n      'C' # Colorless\n      'H' # Phyrexian (Red)\n      'X' # Variable mana (Colorless)\n\n      so a blue green and colorless cost would look like {1}{U}{G} . it is imperative that you wrap these properly in brackets otherwise the process will fail, always wrap mana sympols in brackets\n\n      here are some examples of the kinds of imagery you might associate with common MTG colors:\n\n      ```\n      blue water ocean stylized textured, detailed, high contrast waves and shadows, ripples caustic light sea foam wind, energy plasma\n      black swamp murky bubbles decay death haunted decrepit scratchy cracked bone rot\n      green verdant lush growth forestry leaves flora life grass vines branches trees flowers\n      red fire lava flamy magma blood rage mountain\n      white plains majestic light holy sacred parchment paper texture\n      artifact gears metal rust brown texture steel chrome sheet metal shiny scratch\n      ```\n      prompt against oversaturation, try to avoid it being too bright\n\n      this can be combined with SDXL instruction to guide towards a card styled backdrup such as:\n\n      `fantasy trading card game very thin card border at the outer edge filled with a textured and detailed abstract card background art. stylized abstract card background art is with thematic elements of <your description>`\n\n      if a card is multi-colored, describing the gradient is a good touch. cards should have a high contrast area on the bottom for white text to show up clearly against\n\n      for the prompt_art parameter also use descriptive SDXL styled prompt, keeping in mind the other parameters in your description. just describe the image in detail, don't add anything about the card game or frame for this prompt. use lots of style and quality modifier text, describing the medium, technique, composition and qualities with comma separated SDXL descriptors\n\n      if the name is left open, come up with a creative new card from scratch, anything in the game universe, but with a subversive twist occasionally. \n      "
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "system_pre-prompt"
    }
  },
  "447": {
    "inputs": {
      "value": 18
    },
    "class_type": "Eden_Int",
    "_meta": {
      "title": "steps_sdxl"
    }
  },
  "448": {
    "inputs": {
      "value": 2.5000000000000004
    },
    "class_type": "Eden_Float",
    "_meta": {
      "title": "flux_guidance"
    }
  },
  "449": {
    "inputs": {
      "text": "You will receive a dictionary of attributes pertaining to a fictional and adult comedy card game with same rules, stats, tropes and mechanics that are analagous to Magic The Gathering, at least in function and flavor, but can have a flavor of dark humor. these cards should be valid and legally playable, occasionally overpowered, and sometimes comically disappointing in terms of what they actually do, like a grizzly bear stats wise on an insane body. creature types and abilities should be mtg abilities, or analogs of with same explainer. don't go too HAM on card text or we'll run out of space to print it \n\n      Your response should be in the same format as the input dictionary. Empty values associated with named keys should be filled out by you. Take the existence of an input as either a single shot example of what this should be, or literally use what is there. if it sounds more like a system prompt instruction for you, follow that instruction.\n\n      keep things punchy. these things should fit in the same text allotments a real magic card should have, so names, card type text and flavor text need to be written economically. \n\n      The prompt for the cardframe and card art should be more verbose, and formatted for SDXL CLIP family text encoder. this should not be longer form natural language, but rather explicit and ferbose comma separated statements.\n\n      for the card frames, take any instruction such as prompt suggestion such as color or even abstract concept like \"love\" or \"orange construction palette racks\" into account, along with the card type, name rarity cost etc. common cards can be more understated, and rare or mythic rare cards should be more elaborate and eye catching\n\n      cost should follow traditional MTG cost symbols and be appropriate to the cards power level, card type tropes, and color themes. always wrap each individual mana symbol in {} brackets, with the following available mappings available to you:\n\n      'W' # White\n      'U' # Blue\n      'B' # Black\n      'R' # Red\n      'G' # Green\n      'C' # Colorless\n      'H' # Phyrexian (Red)\n      'X' # Variable mana (Colorless)\n\n      so a blue green and colorless cost would look like {1}{U}{G} . it is imperative that you wrap these properly in brackets otherwise the process will fail, always wrap mana sympols in brackets\n\n      here are some examples of the kinds of imagery you might associate with common MTG colors:\n\n      ```\n      blue water ocean stylized textured, detailed, high contrast waves and shadows, ripples caustic light sea foam wind, energy plasma\n      black swamp murky bubbles decay death haunted decrepit scratchy cracked bone rot\n      green verdant lush growth forestry leaves flora life grass vines branches trees flowers\n      red fire lava flamy magma blood rage mountain\n      white plains majestic light holy sacred parchment paper texture\n      artifact gears metal rust brown texture steel chrome sheet metal shiny scratch\n      ```\n      prompt against oversaturation, try to avoid it being too bright\n\n      this can be combined with SDXL instruction to guide towards a card styled backdrup such as:\n\n      `fantasy trading card game very thin card border at the outer edge filled with a textured and detailed abstract card background art. stylized abstract card background art is with thematic elements of <your description>`\n\n      if a card is multi-colored, describing the gradient is a good touch. cards should have a high contrast area on the bottom for white text to show up clearly against\n\n      for the prompt_art parameter also use descriptive SDXL styled prompt, keeping in mind the other parameters in your description. just describe the image in detail, don't add anything about the card game or frame for this prompt. use lots of style and quality modifier text, describing the medium, technique, composition and qualities with comma separated SDXL descriptors\n\n      if the name is left open, come up with a creative new card from scratch, anything in the game universe, but with a subversive twist occasionally. \n       \n\nany color, any card type, any ability or flavor. You should be a mtg creature with a recognizeable flavor, an odd modern or darkly humorous twist, a spell or enchantment, bomb or cantrip with with good flavor. not every spell is a winner, some are really powerful and others quite stupid.\n\n      This game is a MTG parody set in the desert near the Salton Sea at Mars College just outside of Bombay Beach California, at Mars College, a research institute for AI enthusiasts, off gridders and hippy/philosopher types. Some of the in joke references are here; Use this information in helping generate cards or interacting with user card prompts. \n      \n      Vanlifers and techies live in an off grid bombed out beach town going on adventures, attempting to solve conflicts and reinvent governence, ride electric unicycles, and dance. be creative, irreverent, and exasperate the off grid problems of low privacy, survival cos play and the tropes of cyber techie future optimistic off grid high tech low cost living. Jokes and card ideas to draw inspiration from. make up new names and archetypes, or pull from this lore. when you write flavor text, it should be about 12-15 words, witty, irreverent, sarcastic, hilarious, subversive, can contain adult language, be lews or blue, and should always be clever\n\nfor this round of cards, make Pseudo Scientist, depicting a naked sadhu Math professor on DMT dancing naked at Mahashivratri in front of a giant flaming dodecahedron\n\nfantasy card art.\n\ndon't return anything except for the dict, no shebangs or flags like ```json at the top",
      "output_type": "ANY",
      "passthrough": [
        "452",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "450": {
    "inputs": {
      "text": "fantasy trading card game very thin card border at the outer edge filled with a textured and detailed abstract card background art. stylized abstract card background art is with thematic elements of fire lava flamy magma blood rage mountain, gradient of red and blue, high contrast area on the bottom for white text to show up clearly against",
      "output_type": "ANY",
      "passthrough": [
        "338",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "451": {
    "inputs": {
      "value": "any color, any card type, any ability or flavor. You should be a mtg creature with a recognizeable flavor, an odd modern or darkly humorous twist, a spell or enchantment, bomb or cantrip with with good flavor. not every spell is a winner, some are really powerful and others quite stupid.\n\n      This game is a MTG parody set in the desert near the Salton Sea at Mars College just outside of Bombay Beach California, at Mars College, a research institute for AI enthusiasts, off gridders and hippy/philosopher types. Some of the in joke references are here; Use this information in helping generate cards or interacting with user card prompts. \n      \n      Vanlifers and techies live in an off grid bombed out beach town going on adventures, attempting to solve conflicts and reinvent governence, ride electric unicycles, and dance. be creative, irreverent, and exasperate the off grid problems of low privacy, survival cos play and the tropes of cyber techie future optimistic off grid high tech low cost living. Jokes and card ideas to draw inspiration from. make up new names and archetypes, or pull from this lore. when you write flavor text, it should be about 12-15 words, witty, irreverent, sarcastic, hilarious, subversive, can contain adult language, be lews or blue, and should always be clever\n\nfor this round of cards, make Pseudo Scientist, depicting a naked sadhu Math professor on DMT dancing naked at Mahashivratri in front of a giant flaming dodecahedron"
    },
    "class_type": "Eden_String",
    "_meta": {
      "title": "system_prompt_body"
    }
  },
  "452": {
    "inputs": {
      "text": "%aux% \n\n%aux2%\n\n%aux3%",
      "output_type": "ANY",
      "aux": [
        "446",
        0
      ],
      "aux2": [
        "451",
        0
      ],
      "aux3": [
        "445",
        0
      ]
    },
    "class_type": "DataMonitor",
    "_meta": {
      "title": "👁‍🗨Data Monitor ⁄ Generator ⁄ Converter"
    }
  },
  "461": {
    "inputs": {
      "invert_mask": false,
      "blend_mode": "subtract",
      "opacity": 100,
      "x_percent": 50,
      "y_percent": 50,
      "mirror": "None",
      "scale": 1,
      "aspect_ratio": 1,
      "rotate": 0,
      "transform_method": "lanczos",
      "anti_aliasing": 0,
      "background_image": [
        "181",
        0
      ],
      "layer_image": [
        "377",
        0
      ]
    },
    "class_type": "LayerUtility: ImageBlendAdvance V2",
    "_meta": {
      "title": "LayerUtility: ImageBlendAdvance V2"
    }
  },
  "463": {
    "inputs": {
      "pixels": [
        "461",
        0
      ],
      "vae": [
        "184",
        2
      ]
    },
    "class_type": "VAEEncode",
    "_meta": {
      "title": "VAE Encode"
    }
  },
  "464": {
    "inputs": {
      "image": [
        "461",
        0
      ]
    },
    "class_type": "ImageInvert",
    "_meta": {
      "title": "Invert Image"
    }
  }
}