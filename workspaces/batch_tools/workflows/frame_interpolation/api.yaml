name: Frame Interpolation
description: Mix multiple images into a video by interpolating between frames. Works with images, archives or video files, and can be used to slow down or speed up a movie.
thumbnail: app/frame_interpolation_opt.mp4
tip: This workflow creates animations from a set of images or movie. First the input type is determined; whether images, archive, movie or url, the input is parsed and treated as an image batch that can be sorted by metadata or by visual similarity, and then n number of interpolation frames are added in between each provided frame.
output_type: video
status: prod
visible: false
cost_estimate: 10 #this is totally made up, and requres front-end variables to be provided for resolution, and number of frames, as well as a log scale cost multiplier if visual_path sorting is enabled, and a time multiplier if FILM is selected. This is a non trivial thing to calculate, but will have wild effects on actual run time and our cost if we can't figure this out.
handler: comfyui
comfyui_output_node_id: 15
parameters:
- name: images
  label: Interpolation Images
  description: Interpolation images are keyframes between which new interpolation frames will be created. Image sequence folders, archives and video are all treated as a batch of frames.
  tip: If multiple resolutions are present in an image batch, the width and height of the output will be set by the dimensions of the first image in the batch after sorting. 
  type: image[]
  min_length: 1
  max_length: 100
  required: true
  comfyui: 
    node_id: 174
    field: inputs
    subfield: path
    preprocessing: folder
- name: interpolation_frames
  label: Interpolation Frames
  description: interpolation frames is a multiplier of the original frame counter created between every provided frame of an image sequence or movie. A value of 2 will double the frames, effectively creating a half speed version. A value of 29 will stretch each frame to a full second per provided frame if the Framerate parameter is set to 30 FPS. A value of 1 will not create any interpolation frames; If Skip Frame Interval is set 1, this would effectively create a double speed video from a movie input.
  tip: The output video will be confromed to this framerate. This should stay at the default unless another FPS is specified by the user. Other common framerates are 60fps, 30fps(broadcast default), 24fps (cinema), or 12fps (anime). This parameter does not set the number of frames, only the rate at which the video conforms the total n_frames.
  type: int
  default: 2
  minimum: 1
  maximum: 60
  required: true
  comfyui: 
    node_id: 129
    field: inputs
    subfield: number
- name: FPS
  label: Output Video Framerate
  description: target output video framerate
  tip: The output video will be confromed to this framerate. This should stay at the default unless another FPS is specified by the user. Other common framerates are 60fps, 30fps(broadcast default), 24fps (cinema), or 12fps (anime). This parameter does not set the number of frames, only the rate at which the video conforms the total n_frames.
  type: int
  default: 24
  minimum: 1
  maximum: 60
  comfyui: 
    node_id: 161
    field: inputs
    subfield: value
- name: loop
  label: Loop First Frame
  description: Make the animation a seamless loop by interpolating back to the first frame
  tip: This will force the last frame to be identical to the first and make a seamless loop. Unless specifically requested, this should be kept at False (default).
  type: bool
  default: false
  comfyui: 
    node_id: 174
    field: inputs
    subfield: loop_first_frame
- name: pingpong
  label: Forward-Reverse Loop
  description: Make the animation a seamless loop by concatenating a forward and reversed version of the animation. This term is sometimes called bounce or pingpong; the video will play forwards and then reverse itself back to the beginning.
  tip: This will force the last frame to be identical to the first and make a seamless loop. Unless specifically requested, this should be kept at False (default).
  type: bool
  default: false
  comfyui: 
    node_id: 190
    field: inputs
    subfield: value
- name: use_advanced
  label: Show Advanced Parameters
  description: This toggle reveals advanced parameters to web front end users, and has no effect on the output.
  type: bool
  default: false
  comfyui: 
    node_id: 192
    field: inputs
    subfield: value
- name: sort
  label: Sort Method
  description: Choose a method for sorting a sequence of input images. The visual_path method applies a traveling salesman solver to sort the images by their nearest visual proximity to each other
  tip: This parameter should usually stay at the default of None to preserve the input order, but occasionally an alphabetical or random order may be desired by the user. The visual_path method should be used for a batch of images that a user wants ordered optimally for smoothest interpolation sequencing, but you should always inform the user that you are providing this optimization if this option is being selected. 
  type: string
  default: None
  choices: [None, alphabetical, visual_path, random]
  visible_if: use_advanced=true
  comfyui: 
    node_id: 174
    field: inputs
    subfield: sort
- name: reverse_order
  label: Reverse Order
  description: This toggle reverses the list order of image sequences.
  tip: This should usually stay false, but if a user asks to flip it, its nice to sort backwards alphabetically, or when sort by visual_path is enabled and the user wants the video to flow in the opposite direction.
  type: bool
  default: false
  visible_if: use_advanced=true
  comfyui: 
    node_id: 174
    field: inputs
    subfield: reverse_order
- name: use_input_video_fps
  label: Retain Video FPS
  description: This toggle preserves the original FPS of an input video. 
  tip: This is useful for creating slow motion videos that play back at the original framerate, if that framerate is not the default of 30fps. For instance, European cinematic standards are 25fps, and if you'd like to keep your output video conformed to this framerate, this value could be true. This is an advanced parameter that should always be falsue unless otherwise specified.
  type: bool
  default: false
  visible_if: use_advanced=true
  comfyui: 
    node_id: 160
    field: inputs
    subfield: value
- name: image_load_cap
  label: Image Count Cap
  description: Limit the maximum number of images processed from a video or image sequence. A 0 value has no limit
  tip: This parameter can be used to only grab n number of images from a sequence or video clip. If a user asks to only use the first 10 seconds of a video clip, this calculation could be done by assuming a frame rate of 30FPS and limiting the Image Count Cap to 300 frames. This is also useful when sorting, for example a batch of provided images capped to three and sorted by random will always pick 3 random images from a list.
  type: int
  hide_from_ui: true
  hide_from_agent: true
  default: 0
  minimum: 0
  maximum: 1800
  visible_if: use_advanced=true
  comfyui: 
    node_id: 174
    field: inputs
    subfield: image_load_cap
- name: start_index
  label: Start Frame Index
  description: This parameter determines the first frame from a batch, skipping all of the frames that came before it.
  tip: This parameter might be set to a non 0 value if a user wanted to skip the beginning of a video clip before processing. If the desired outcome is a video process that doesn't begin until two seconds into the clip, assuming 30fps one might set this value to 60.
  type: int
  hide_from_ui: true
  hide_from_agent: true
  default: 0
  minimum: 0
  maximum: 600
  visible_if: use_advanced=true
  comfyui: 
    node_id: 174
    field: inputs
    subfield: skip_n
- name: skip_n
  label: Image Skip Interval
  description: This parameter determines the number of images to skip from a sequence or video; setting the value to 1 would ignore every other frame.
  tip: This parameter is most useful for reducing the number of frames processed from a video or image batch. Setting this value to 1 and keeping interpolation_frames at 1 would produce a double speed video with no interpolation.
  type: int
  hide_from_ui: true
  hide_from_agent: true
  default: 0
  minimum: 0
  maximum: 60
  visible_if: use_advanced=true
  comfyui: 
    node_id: 174
    field: inputs
    subfield: skip_n
- name: model
  label: Interpolation Method
  description: Choose a frame interpolation model method. RIFE models are fast and cheap, whereas FILM is much slower and therefore more expensive, while having an identifiable different (but not necessarily better or higher quality) result when the interpolation_frames parameter value is high (greater than 6).
  type: string
  default: rife49.pth
  choices: [rife47.pth, rife49.pth, FILM]
  visible_if: use_advanced=true
  comfyui: 
    node_id: 193
    field: inputs
    subfield: select_item