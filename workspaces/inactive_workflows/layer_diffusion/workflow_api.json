{
  "3": {
    "inputs": {
      "seed": 208397602917938,
      "steps": 20,
      "cfg": 8,
      "sampler_name": "euler",
      "scheduler": "normal",
      "denoise": 1,
      "model": [
        "13",
        0
      ],
      "positive": [
        "6",
        0
      ],
      "negative": [
        "7",
        0
      ],
      "latent_image": [
        "5",
        0
      ]
    },
    "class_type": "KSampler",
    "_meta": {
      "title": "KSampler"
    }
  },
  "4": {
    "inputs": {
      "ckpt_name": "Eden_SDXL.safetensors"
    },
    "class_type": "CheckpointLoaderSimple",
    "_meta": {
      "title": "Load Checkpoint"
    }
  },
  "5": {
    "inputs": {
      "width": 1024,
      "height": 1024,
      "batch_size": 1
    },
    "class_type": "EmptyLatentImage",
    "_meta": {
      "title": "Empty Latent Image"
    }
  },
  "6": {
    "inputs": {
      "text": "a bonsai tree inside of a snowglobe crystal orb",
      "clip": [
        "4",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Prompt)"
    }
  },
  "7": {
    "inputs": {
      "text": "text, watermark",
      "clip": [
        "4",
        1
      ]
    },
    "class_type": "CLIPTextEncode",
    "_meta": {
      "title": "CLIP Text Encode (Prompt)"
    }
  },
  "13": {
    "inputs": {
      "config": "SDXL, Conv Injection",
      "weight": 1,
      "model": [
        "4",
        0
      ]
    },
    "class_type": "LayeredDiffusionApply",
    "_meta": {
      "title": "Layer Diffuse Apply"
    }
  },
  "14": {
    "inputs": {
      "samples": [
        "3",
        0
      ],
      "vae": [
        "4",
        2
      ]
    },
    "class_type": "VAEDecode",
    "_meta": {
      "title": "VAE Decode"
    }
  },
  "15": {
    "inputs": {
      "sd_version": "SDXL",
      "sub_batch_size": 16,
      "samples": [
        "3",
        0
      ],
      "images": [
        "14",
        0
      ]
    },
    "class_type": "LayeredDiffusionDecode",
    "_meta": {
      "title": "Layer Diffuse Decode"
    }
  },
  "24": {
    "inputs": {
      "mask": [
        "15",
        1
      ]
    },
    "class_type": "MaskToImage",
    "_meta": {
      "title": "Convert Mask to Image"
    }
  },
  "28": {
    "inputs": {
      "image": [
        "15",
        0
      ],
      "alpha": [
        "29",
        0
      ]
    },
    "class_type": "JoinImageWithAlpha",
    "_meta": {
      "title": "Join Image with Alpha"
    }
  },
  "29": {
    "inputs": {
      "mask": [
        "15",
        1
      ]
    },
    "class_type": "InvertMask",
    "_meta": {
      "title": "InvertMask"
    }
  },
  "30": {
    "inputs": {
      "filename_prefix": "layer-diffusion",
      "images": [
        "34",
        0
      ]
    },
    "class_type": "SaveImage",
    "_meta": {
      "title": "Save Image"
    }
  },
  "31": {
    "inputs": {
      "mask": [
        "15",
        1
      ]
    },
    "class_type": "MaskToImage",
    "_meta": {
      "title": "Convert Mask to Image"
    }
  },
  "32": {
    "inputs": {
      "mask": [
        "15",
        1
      ]
    },
    "class_type": "InvertMask",
    "_meta": {
      "title": "InvertMask"
    }
  },
  "33": {
    "inputs": {
      "image": [
        "31",
        0
      ],
      "alpha": [
        "32",
        0
      ]
    },
    "class_type": "JoinImageWithAlpha",
    "_meta": {
      "title": "Join Image with Alpha"
    }
  },
  "34": {
    "inputs": {
      "blend_factor": 1,
      "blend_mode": "multiply",
      "image1": [
        "28",
        0
      ],
      "image2": [
        "33",
        0
      ]
    },
    "class_type": "ImageBlend",
    "_meta": {
      "title": "ImageBlend"
    }
  }
}